// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// DsGene
SEXP DsGene(SEXP expr_r, SEXP label_r, bool as_df, int num_top, int additional, int n_threads);
RcppExport SEXP _scibet_DsGene(SEXP expr_rSEXP, SEXP label_rSEXP, SEXP as_dfSEXP, SEXP num_topSEXP, SEXP additionalSEXP, SEXP n_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type expr_r(expr_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type label_r(label_rSEXP);
    Rcpp::traits::input_parameter< bool >::type as_df(as_dfSEXP);
    Rcpp::traits::input_parameter< int >::type num_top(num_topSEXP);
    Rcpp::traits::input_parameter< int >::type additional(additionalSEXP);
    Rcpp::traits::input_parameter< int >::type n_threads(n_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(DsGene(expr_r, label_r, as_df, num_top, additional, n_threads));
    return rcpp_result_gen;
END_RCPP
}
// GenProb
SEXP GenProb(SEXP expr_r, SEXP label_r, SEXP geneset_r, int n_threads);
RcppExport SEXP _scibet_GenProb(SEXP expr_rSEXP, SEXP label_rSEXP, SEXP geneset_rSEXP, SEXP n_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type expr_r(expr_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type label_r(label_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type geneset_r(geneset_rSEXP);
    Rcpp::traits::input_parameter< int >::type n_threads(n_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(GenProb(expr_r, label_r, geneset_r, n_threads));
    return rcpp_result_gen;
END_RCPP
}
// Gambler
SEXP Gambler(SEXP expr_r, SEXP prob_r, bool ret_tab, int n_threads);
RcppExport SEXP _scibet_Gambler(SEXP expr_rSEXP, SEXP prob_rSEXP, SEXP ret_tabSEXP, SEXP n_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type expr_r(expr_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type prob_r(prob_rSEXP);
    Rcpp::traits::input_parameter< bool >::type ret_tab(ret_tabSEXP);
    Rcpp::traits::input_parameter< int >::type n_threads(n_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(Gambler(expr_r, prob_r, ret_tab, n_threads));
    return rcpp_result_gen;
END_RCPP
}
// GenEntr
SEXP GenEntr(SEXP expr_r, double window, int n_threads);
RcppExport SEXP _scibet_GenEntr(SEXP expr_rSEXP, SEXP windowSEXP, SEXP n_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type expr_r(expr_rSEXP);
    Rcpp::traits::input_parameter< double >::type window(windowSEXP);
    Rcpp::traits::input_parameter< int >::type n_threads(n_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(GenEntr(expr_r, window, n_threads));
    return rcpp_result_gen;
END_RCPP
}
// NullTest
SEXP NullTest(SEXP ref_r, SEXP query_r, SEXP null_r, SEXP label_r, int n_feat, int n_threads);
RcppExport SEXP _scibet_NullTest(SEXP ref_rSEXP, SEXP query_rSEXP, SEXP null_rSEXP, SEXP label_rSEXP, SEXP n_featSEXP, SEXP n_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ref_r(ref_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type query_r(query_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type null_r(null_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type label_r(label_rSEXP);
    Rcpp::traits::input_parameter< int >::type n_feat(n_featSEXP);
    Rcpp::traits::input_parameter< int >::type n_threads(n_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(NullTest(ref_r, query_r, null_r, label_r, n_feat, n_threads));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scibet_DsGene", (DL_FUNC) &_scibet_DsGene, 6},
    {"_scibet_GenProb", (DL_FUNC) &_scibet_GenProb, 4},
    {"_scibet_Gambler", (DL_FUNC) &_scibet_Gambler, 4},
    {"_scibet_GenEntr", (DL_FUNC) &_scibet_GenEntr, 3},
    {"_scibet_NullTest", (DL_FUNC) &_scibet_NullTest, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_scibet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
